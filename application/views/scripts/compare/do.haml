-#
  This file is part of the CSI QFrame.
  
  The CSI QFrame is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 3 of the License, or
  (at your option) any later version.
  
  The CSI QFrame is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  
  @copyright  Copyright (c) 2007 Collaborative Software Initiative (CSI)
  @license    http://www.gnu.org/licenses/   GNU General Public License v3

- header('Cache-Control: no-store, no-cache, must-revalidate, private, post-check=0, pre-check=0', FALSE);
- header('Pragma: no-cache');

- $localStylesheets = array('report')

#reportHeader
  != $this->linkTo(array('action' => null, 'id' => null), 'back to model selection')
  |
  != $this->linkTo($this->url(array('action' => 'csv')) . "?{$_SERVER['QUERY_STRING']}", 'save as csv')

- if(!$this->hasFailures($this->failures))
  %h1 all responses passed

- if(isset($this->failures['model_fail']) && count($this->failures['model_fail']) > 0)
  %h1#failure questions that failed the model check
  %table#failureTable
    %tr.header
      %th.subdominant question
      %th response
      %th.subdominant additional information
      %th error message(s)
    - $rowNum = 0
    - foreach($this->failures['model_fail'] as $failure)
      - $rowNum++
      %tr{ 'class' => (($rowNum % 2) ? 'odd' : 'even') }
        %td= $failure['question']->qText
        %td= $failure['question']->getResponseText()
        %td= $failure['question']->getResponse()->additionalInfo
        %td.nowrap
          != implode("<br />", $failure['messages'])
      - if ($failure['remediation_info'])
        %tr{ 'class' => (($rowNum %2) ? 'odd' : 'even') }
          %td{ 'colspan' => 4 }
            %b Remediation:
            = $failure['remediation_info']

        
- if(isset($this->failures['additional_information']) && count($this->failures['additional_information']) > 0)
  %h1#additional questions with additional information
  %table#additionalTable
    %tr.header
      %th question
      %th response
      %th.dominant additional information
    - $rowNum = 0
    - foreach($this->failures['additional_information'] as $failure)
      - $rowNum++
      %tr{ 'class' => (($rowNum % 2) ? 'odd' : 'even') }
        %td= $failure['question']->qText
        %td= $failure['question']->getResponseText()
        %td= $failure['question']->getResponse()->additionalInfo
      - if ($failure['remediation_info'])
        %tr{ 'class' => (($rowNum %2) ? 'odd' : 'even') }
          %td{ 'colspan' => 3 }
            %b Remediation:
            = $failure['remediation_info']

- if(isset($this->failures['model_pass']) && count($this->failures['model_pass']) > 0)
  %h1#passing questions that passed the model check
  %table#passingTable
    %tr.header
      %th question
      %th response
      %th.dominant additional information
    - $rowNum = 0
    - foreach($this->failures['model_pass'] as $failure)
      - $rowNum++
      %tr{ 'class' => (($rowNum % 2) ? 'odd' : 'even') }
        %td= $failure['question']->qText
        %td= $failure['question']->getResponseText()
        %td= $failure['question']->getResponse()->additionalInfo
      - if ($failure['remediation_info'])
        %tr{ 'class' => (($rowNum %2) ? 'odd' : 'even') }
          %td{ 'colspan' => 3 }
            %b Remediation:
            = $failure['remediation_info']
